"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[586],{66153:function(e){e.exports=JSON.parse('{"functions":[{"name":"params","desc":"Parses a query string into a table. A leading `?` will be\\nremoved from the query string.\\n\\n```lua\\nlocal query = \\"?lorem=ipsum&dolor=sit&amet=consectetur\\"\\n\\nlocal value = params(query) -- {lorem = \\"ipsum\\", dolor = \\"sit\\", amet = \\"consectetur\\"}\\n```","params":[{"name":"query","desc":"The query string to parse.","lua_type":"string"}],"returns":[{"desc":"The parsed query string.","lua_type":"table"}],"function_type":"static","source":{"line":23,"path":"src/params.lua"}},{"name":"normalisePath","desc":"Normalises a URL path, removing dot segments and resolving relative paths.\\n\\n```lua\\nlocal path = \\"/./lorem/ipsum/../dolor/../sit\\"\\n\\nlocal value = normalisePath(path) -- \\"/lorem/sit\\"\\n```","params":[{"name":"path","desc":"The path to normalise.","lua_type":"string"}],"returns":[{"desc":"The normalised path.","lua_type":"string"}],"function_type":"static","source":{"line":21,"path":"src/normalisePath.lua"}},{"name":"parse","desc":"Parses a URL into a URL object.\\n\\n```lua\\nlocal value = URL.parse(\\"https://example.com:8080/path?query=true#hash\\")\\n\\nvalue.hostname -- \\"example.com\\"\\nvalue.port -- 8080\\nvalue.path -- \\"path\\"\\nvalue.query -- \\"query=true\\"\\nvalue.hash -- \\"hash\\"\\nvalue.scheme -- \\"https:\\"\\n```","params":[{"name":"url","desc":"The URL to parse.","lua_type":"string"}],"returns":[{"desc":"The parsed URL.","lua_type":"URL"}],"function_type":"static","source":{"line":37,"path":"src/parse.lua"}},{"name":"stringify","desc":"Transforms a previously parsed URL object back into a string.\\n\\n```lua\\nlocal parsed = URL.parse(\\"https://example.com:8080/path?query#hash\\")\\nlocal value = URL.stringify(parsed) -- \\"https://example.com:8080/path?query#hash\\"\\n```","params":[{"name":"url","desc":"The URL object to stringify.","lua_type":"URL"}],"returns":[{"desc":"The stringified URL.","lua_type":"string"}],"function_type":"static","source":{"line":27,"path":"src/stringify.lua"}}],"properties":[],"types":[{"name":"URL","desc":"","fields":[{"name":"scheme","lua_type":"string","desc":"The scheme of the URL, including the `\\":\\"`; e.g. `\\"https:\\"`"},{"name":"username","lua_type":"string","desc":"The username specified before the domain name."},{"name":"password","lua_type":"string","desc":"The password specified before the domain name."},{"name":"host","lua_type":"string","desc":"The domain name (`.hostname`) followed by the port if specified (`.port`); e.g. `\\"csqrl.dev:1337\\"`"},{"name":"hostname","lua_type":"string","desc":"The domain name; e.g. `\\"csqrl.dev\\"`"},{"name":"port","lua_type":"string","desc":"The port number if specified; e.g. `\\"1337\\"`"},{"name":"origin","lua_type":"string","desc":"The origin of the URL; e.g. `\\"https://csqrl.dev:1337\\"`"},{"name":"path","lua_type":"string","desc":"The path of the URL, excluding the leading `\\"/\\"`, query string and hash fragment; e.g. `\\"path/to/file\\"`"},{"name":"query","lua_type":"string","desc":"The query string of the URL, excluding the leading `\\"?\\"` and hash fragment; e.g. `\\"param=value\\"`"},{"name":"hash","lua_type":"string","desc":"The hash fragment of the URL, excluding the leading `\\"#\\"`; e.g. `\\"hash\\"`"},{"name":"href","lua_type":"string","desc":"The full URL; e.g. `\\"https://csqrl.dev:1337/path/to/file?param=value#hash\\"`"}],"source":{"line":18,"path":"src/Types.lua"}}],"name":"URL","desc":"Utility methods for working with URLs.","source":{"line":7,"path":"src/init.lua"}}')}}]);